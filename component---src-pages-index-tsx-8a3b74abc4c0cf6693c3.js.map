{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["RouteIndex","useEffect","a","i18next","use","LanguageDetector","init","fallbackLng","whitelist","navigate","language","getLanguage"],"mappings":"qNA2BeA,UAlBkB,WAe/B,OAdAC,qBAAU,YACS,+BAAG,sBAAAC,EAAA,sEACZC,IACHC,IAAIC,KACJC,KAAK,CACJC,YAAa,KACbC,UAAW,CAAC,KAAM,QALJ,OAOlBC,mBAAS,IAAIN,IAAQO,SAAb,KAPU,2CAAH,qDAUjBC,KACC,IAEK","file":"component---src-pages-index-tsx-8a3b74abc4c0cf6693c3.js","sourcesContent":["import React, { useEffect } from 'react';\nimport i18next from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport { navigate } from 'gatsby';\n\n// unfortunately createRedirect doesn't invoke wrapElement, which means the\n// redirected page doesn't have the i18n context which is needed\n\nconst RouteIndex: React.FC<{}> = () => {\n  useEffect(() => {\n    const getLanguage = async () => {\n      await i18next\n        .use(LanguageDetector)\n        .init({\n          fallbackLng: 'nl',\n          whitelist: ['en', 'nl'],\n        });\n      navigate(`/${i18next.language}/`);\n    };\n\n    getLanguage();\n  }, []);\n\n  return (<div />);\n};\n\nexport default RouteIndex;\n"],"sourceRoot":""}
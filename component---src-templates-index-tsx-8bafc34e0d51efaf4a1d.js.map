{"version":3,"sources":["webpack:///./src/templates/index.tsx"],"names":["IndexPage","props","data","title","site","siteMetadata","allContentfulRecipe","edges","map","node","key","id","recipe"],"mappings":"+LA6BeA,UAhB8B,SAACC,GAAU,IAC9CC,EAASD,EAATC,KACAC,EAAUD,EAAKE,KAAKC,aAApBF,MAER,OACE,kBAAC,IAAD,iBAAYF,EAAZ,CAAmBE,MAAOA,IACxB,kBAAC,IAAD,CAAQA,MAAOA,IACf,kBAAC,IAAD,KACGD,EAAKI,oBAAoBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAClC,kBAAC,IAAD,CAAYC,IAAKD,EAAKE,GAAIC,OAAQH","file":"component---src-templates-index-tsx-8bafc34e0d51efaf4a1d.js","sourcesContent":["import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport { AllContentfulRecipes } from '../interfaces/recipe'\nimport { Site } from '../interfaces/site'\n\nimport Layout from './common/Layout'\nimport RecipeCard from './common/RecipeCard'\nimport RecipeCards from './common/RecipeCards'\n\ntype Data = Site & AllContentfulRecipes;\n\nconst IndexPage: React.FC<PageProps<Data>> = (props) => {\n  const { data } = props\n  const { title } = data.site.siteMetadata\n\n  return (\n    <Layout {...props} title={title}>\n      <Helmet title={title} />\n      <RecipeCards>\n        {data.allContentfulRecipe.edges.map(({ node }) => (\n          <RecipeCard key={node.id} recipe={node} />\n        ))}\n      </RecipeCards>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexByLanguage($locale: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulRecipe(\n      filter: { node_locale: { eq: $locale }, title: { ne: null } }\n      sort: { fields: title, order: ASC }\n    ) {\n      edges {\n        node {\n          id\n          title\n          slug\n          publishDate\n          heroImage {\n            fluid(maxWidth: 750) {\n              ...GatsbyContentfulFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}